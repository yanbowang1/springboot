buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}


dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    //compile('org.springframework.boot:spring-boot-starter-parent:2.0.6.RELEASE')
    // 热启动
    compile('org.springframework.boot:spring-boot-devtools'){
        // 关闭依赖传递性
        transitive = false
    }
    // 与jsp结合
    compile('javax.servlet:jstl')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	// 爬虫
	compile('org.jsoup:jsoup:1.11.3')
	// swagger
	compile('io.springfox:springfox-swagger2:2.8.0')
	compile('io.springfox:springfox-swagger-ui:2.8.0')
	// freemark 框架
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	// Thymeleft 框架
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	// Lombok 插件
	compile('org.projectlombok:lombok:1.16.20')
    // 切面编程
    compile('org.springframework.boot:spring-boot-starter-aop')
	// 邮件
	compile('org.springframework.boot:spring-boot-starter-mail')
}
